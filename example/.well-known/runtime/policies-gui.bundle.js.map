{"version":3,"sources":["node_modules/browser-pack/_prelude.js","policies-gui.bundle.js","src/admin/policiesGUI.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","policiesGui","bundle","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","PoliciesGUI","value","policyEng","policyEngine","console","log","$","addClass","removeClass","on","goHome","showNewUserPanel","addUser","showNewGroupPanel","closeGroup","addGroup","closeGroupCreation","requestGroupsNames","addGroupsListener","addGroupMembersListener","showNewTimeRestrictionPanel","addTimeRestriction","changeTimeRestriction","cancelTimeDetails","cancelNewTimeRestriction","requestTimeRestrictions","addTimeListListener","document","getElementById","addEventListener","groupName","id","requestGroup","innerHTML","groupsNames","myList","numGroups","createElement","className","appendChild","createTextNode","groupMembers","blockButton","onclick","innerText","requestAddPolicy","allowButton","deleteButton","requestRemoveGroup","members","numMembers","list","item","removeBtn","type","val","newGroupName","requestCreateGroup","newUserEmail","requestAddUser","userEmail","params","authorise","policy","join","scope","condition","actions","slice","removeUserFromGroup","timeslot","time","split","requestTimeRestriction","timeRestrictions","numRestrictions","array","shift","timeRestriction","are","timeRestrictionID","start","end","policyID","requestChangeTimePolicy"],"mappings":"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","file":"policies-gui.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.policiesGui || (g.policiesGui = {})).bundle = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// jshint browser:true, jquery: true\n\nvar PoliciesGUI = function () {\n  function PoliciesGUI() {\n    _classCallCheck(this, PoliciesGUI);\n  }\n\n  _createClass(PoliciesGUI, [{\n    key: 'PoliciesGUI',\n    value: function PoliciesGUI(policyEng) {\n      this.policyEngine = policyEng;\n    }\n  }, {\n    key: 'showPoliciesGUI',\n    value: function showPoliciesGUI() {\n      console.log('POLICY ENGINE @ show', this.policyEngine);\n      $('.app').addClass('hide');\n      $('.identities-gui').addClass('hide');\n      $('.policies-gui').removeClass('hide');\n\n      $('.back').on('click', goHome);\n      $('.new-user').on('click', showNewUserPanel);\n      $('.add-user').on('click', addUser);\n      $('.new-group').on('.click', showNewGroupPanel);\n      $('.cancel-new-group').on('click', closeGroup);\n      $('.add-group').on('click', addGroup);\n      $('.close-new-group').on('click', closeGroupCreation);\n\n      requestGroupsNames();\n      addGroupsListener();\n      addGroupMembersListener();\n\n      $('.time-new').on('click', showNewTimeRestrictionPanel);\n      $('.time-allow').on('click', addTimeRestriction(true));\n      $('.time-block').on('click', addTimeRestriction(false));\n      $('.time-change-allow').on('click', changeTimeRestriction(true));\n      $('.time-change-block').on('click', changeTimeRestriction(false));\n      $('.time-cancel').on('click', cancelTimeDetails);\n      $('.time-cancel-new').on('click', cancelNewTimeRestriction);\n      requestTimeRestrictions();\n      addTimeListListener();\n    }\n  }, {\n    key: 'goHome',\n    value: function goHome() {\n      $('.app').removeClass('hide');\n      $('.policies-gui').addClass('hide');\n    }\n  }, {\n    key: 'addGroupsListener',\n    value: function addGroupsListener() {\n      document.getElementById('groupsList').addEventListener('click', function (e) {\n        var groupName = document.getElementById(e.target.id).id;\n        requestGroup(groupName);\n        document.getElementById('groupName').innerHTML = groupName;\n      });\n    }\n  }, {\n    key: 'requestGroupsNames',\n    value: function requestGroupsNames() {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'getGroupsNames'\n        }\n      };\n      /*messageBus.postMessage(message, function (response) {\n      showGroupsNames(response.body.value);\n      });*/\n    }\n  }, {\n    key: 'showGroupsNames',\n    value: function showGroupsNames(groupsNames) {\n      var myList = document.getElementById('groupsList');\n      var numGroups = groupsNames.length;\n      if (numGroups === 0) {\n        myList.innerHTML = '<p>There are no groups to display.</p>';\n      } else {\n        myList.innerHTML = '';\n        for (var i = 0; i < numGroups; i++) {\n          var a = document.createElement('a');\n          a.className = 'collection-item';\n          a.id = groupsNames[i];\n          a.appendChild(document.createTextNode(groupsNames[i]));\n          myList.appendChild(a);\n        }\n      }\n    }\n  }, {\n    key: 'requestGroup',\n    value: function requestGroup(groupName) {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'getGroup',\n          params: {\n            groupName: groupName\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'showGroupMembers',\n    value: function showGroupMembers(groupMembers) {\n      $('.newGroup').addClass('hide');\n      $('.myGroups').addClass('hide');\n      var blockButton = document.getElementById('block');\n      blockButton.onclick = function () {\n        var groupName = document.getElementById('groupName').innerText;\n        $('.members').addClass('hide');\n        requestAddPolicy('group', groupName, false);\n        $('.newGroup').removeClass('hide');\n        $('.myGroups').removeClass('hide');\n      };\n      var allowButton = document.getElementById('allow');\n      allowButton.onclick = function () {\n        var groupName = document.getElementById('groupName').innerText;\n        $('.members').addClass('hide');\n        requestAddPolicy('group', groupName, true);\n        $('.newGroup').removeClass('hide');\n        $('.myGroups').removeClass('hide');\n      };\n      var deleteButton = document.getElementById('delete');\n      deleteButton.onclick = function () {\n        var groupName = document.getElementById('groupName').innerText;\n        $('.members').addClass('hide');\n        requestRemoveGroup(groupName);\n        requestGroupsNames();\n        $('.newGroup').removeClass('hide');\n        $('.myGroups').removeClass('hide');\n      };\n\n      var members = $('.members');\n      members.removeClass('hide');\n      var myList = document.getElementById('groupMembers');\n      myList.innerHTML = '<ul id=\\'groupMembers\\'></ul>';\n\n      var numMembers = groupMembers.length;\n      if (numMembers === 0) {\n        myList.innerHTML = '<p>This groups has no members.</p>';\n      } else {\n        var list = document.createElement('ul');\n        for (var i = 0; i < numMembers; i++) {\n          var item = document.createElement('li');\n          item.appendChild(document.createTextNode(groupMembers[i]));\n          item.id = groupMembers[i];\n          var removeBtn = document.createElement('button');\n          removeBtn.className = 'waves-effect waves-light btn';\n          removeBtn.id = 'member:' + groupMembers[i];\n          removeBtn.innerHTML = 'Remove';\n          removeBtn.type = 'button';\n          item.appendChild(removeBtn);\n          list.appendChild(item);\n        }\n        myList.appendChild(list);\n      }\n    }\n  }, {\n    key: 'requestRemoveGroup',\n    value: function requestRemoveGroup(groupName) {\n      var message = {\n        type: 'execute', to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'removeGroup',\n          params: {\n            groupName: groupName\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'showNewGroupPanel',\n    value: function showNewGroupPanel() {\n      $('.newGroupPanel').removeClass('hide');\n      $('.members').addClass('hide');\n      $('#newGroupName').val('');\n    }\n  }, {\n    key: 'addGroup',\n    value: function addGroup() {\n      $('.newGroupPanel').addClass('hide');\n      var newGroupName = $('#newGroupName').val();\n      requestCreateGroup(newGroupName);\n      requestGroupsNames();\n    }\n  }, {\n    key: 'closeGroupCreation',\n    value: function closeGroupCreation() {\n      $('.newGroupPanel').addClass('hide');\n    }\n  }, {\n    key: 'closeGroup',\n    value: function closeGroup() {\n      $('.members').addClass('hide');\n      $('.myGroups').removeClass('hide');\n      $('.newGroup').removeClass('hide');\n    }\n  }, {\n    key: 'requestCreateGroup',\n    value: function requestCreateGroup(groupName) {\n      var message = {\n        type: 'execute', to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'createGroup',\n          params: {\n            groupName: groupName\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'showNewUserPanel',\n    value: function showNewUserPanel() {\n      $('.newUser').removeClass('hide');\n      $('#newUserEmail').val('');\n    }\n  }, {\n    key: 'addUser',\n    value: function addUser() {\n      var newUserEmail = $('#newUserEmail').val();\n      var groupName = document.getElementById('groupName').innerText;\n      requestAddUser(newUserEmail, groupName);\n      requestGroup(groupName);\n      $('.newUser').addClass('hide');\n    }\n  }, {\n    key: 'cancelUser',\n    value: function cancelUser() {\n      $('.members').addClass('hide');\n      $('.newGroup').removeClass('hide');\n    }\n  }, {\n    key: 'requestAddUser',\n    value: function requestAddUser(userEmail, groupName) {\n      var message = {\n        type: 'execute', to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'addToGroup',\n          params: {\n            userEmail: userEmail,\n            groupName: groupName\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'requestAddPolicy',\n    value: function requestAddPolicy(type, params, authorise) {\n      var policy = {};\n      if (typeof params === 'string') {\n        policy = {\n          id: [type, params].join('-'), //group-groupname\n          scope: 'user',\n          condition: [type, params].join(' '), //group groupname\n          authorise: authorise,\n          actions: []\n        };\n      } else {\n        policy = {\n          id: [type, params.join('-')].join('-'), //time-1:00-2:00\n          scope: 'user',\n          condition: [type, params.join(' ')].join(' '), //time 1:00 2:00\n          authorise: authorise,\n          actions: []\n        };\n      }\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'addPolicies',\n          params: {\n            policies: [policy],\n            scope: 'user'\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'addGroupMembersListener',\n    value: function addGroupMembersListener() {\n      document.getElementById('groupMembers').addEventListener('click', function (e) {\n        var userEmail = document.getElementById(e.target.id).id.slice(7);\n        var groupName = document.getElementById('groupName').innerText;\n        removeUserFromGroup(userEmail, groupName);\n        requestGroup(groupName);\n      });\n    }\n  }, {\n    key: 'removeUserFromGroup',\n    value: function removeUserFromGroup(userEmail, groupName) {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'removeFromGroup',\n          params: {\n            userEmail: userEmail,\n            groupName: groupName\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n\n    /*******************************************************/\n\n  }, {\n    key: 'requestTimeRestrictions',\n    value: function requestTimeRestrictions() {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'getTimeRestrictions'\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'addTimeListListener',\n    value: function addTimeListListener() {\n      document.getElementById('timeRestrictionsList').addEventListener('click', function (e) {\n        var timeslot = e.target.id; //time-1-2\n        var time = timeslot.split('-');\n        document.getElementById('timeslot').innerHTML = 'Time slot: from ' + time[1] + ' to ' + time[2];\n        requestTimeRestriction(timeslot);\n\n        //requestRemoveTimeRestriction(e.target.id);\n        //requestTimeRestrictions();\n      });\n    }\n  }, {\n    key: 'requestTimeRestriction',\n    value: function requestTimeRestriction(id) {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'getTimeRestrictionById',\n          params: {\n            policyID: id,\n            scope: 'user'\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'showTimeRestrictionsList',\n    value: function showTimeRestrictionsList(timeRestrictions) {\n      $('.showTimeRestrictions').removeClass('hide');\n      var myList = document.getElementById('timeRestrictionsList');\n\n      var numRestrictions = timeRestrictions.length;\n      if (numRestrictions === 0) {\n        myList.innerHTML = '<p>There are no time restrictions set.<p>';\n      } else {\n        myList.innerHTML = '';\n        for (var i = 0; i < numRestrictions; i++) {\n          var array = timeRestrictions[i].split(' ');\n          array.shift();\n          var a = document.createElement('a');\n          a.className = 'collection-item';\n          a.id = 'time-' + array.join('-');\n          a.appendChild(document.createTextNode(array.join(' - ')));\n          myList.appendChild(a);\n        }\n      }\n    }\n  }, {\n    key: 'showTimeRestriction',\n    value: function showTimeRestriction(timeRestriction) {\n      $('.showTimeRestrictions').addClass('hide');\n      $('.newRestriction').addClass('hide');\n      $('.newRestrictionPanel').addClass('hide');\n      $('.timeRestriction').removeClass('hide');\n\n      var are = timeRestriction.authorise ? ' are ' : ' are not ';\n      document.getElementById('timeDetails').innerHTML = '<p>You' + are + 'available in this timeslot.</p>';\n    }\n  }, {\n    key: 'requestRemoveTimeRestriction',\n    value: function requestRemoveTimeRestriction(timeRestrictionID) {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'removePolicies',\n          params: {\n            policyID: timeRestrictionID,\n            scope: 'user'\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'showNewTimeRestrictionPanel',\n    value: function showNewTimeRestrictionPanel() {\n      $('.newRestrictionPanel').removeClass('hide');\n      $('#startTime').val('');\n      $('#endTime').val('');\n    }\n  }, {\n    key: 'addTimeRestriction',\n    value: function addTimeRestriction(authorise) {\n      $('.newRestrictionPanel').addClass('hide');\n      var start = $('#startTime').val();\n      var end = $('#endTime').val();\n      requestAddPolicy('time', [start, end], authorise);\n      requestTimeRestrictions();\n    }\n  }, {\n    key: 'cancelNewTimeRestriction',\n    value: function cancelNewTimeRestriction() {\n      $('.showTimeRestrictions').removeClass('hide');\n      $('.newRestrictionPanel').addClass('hide');\n    }\n  }, {\n    key: 'changeTimeRestriction',\n    value: function changeTimeRestriction(authorise) {\n      var timeslot = document.getElementById('timeslot').innerText;\n      var time = timeslot.split(' ');\n      var policyID = 'time-' + time[3] + '-' + time[5];\n      requestChangeTimePolicy(policyID, authorise);\n      cancelTimeDetails();\n    }\n  }, {\n    key: 'requestChangeTimePolicy',\n    value: function requestChangeTimePolicy(policyID, authorise) {\n      var message = {\n        type: 'execute',\n        to: 'domain://localhost/policy-engine',\n        from: 'domain://localhost/policies-gui',\n        body: {\n          method: 'changeTimePolicy',\n          params: {\n            policyID: policyID,\n            authorise: authorise,\n            scope: 'user'\n          }\n        }\n      };\n      //messageBus.postMessage(message);\n    }\n  }, {\n    key: 'cancelTimeDetails',\n    value: function cancelTimeDetails() {\n      $('.timeRestriction').addClass('hide');\n      $('.showTimeRestrictions').removeClass('hide');\n      $('striction').removeClass('hide');\n    }\n  }]);\n\n  return PoliciesGUI;\n}();\n\n},{}]},{},[1])(1)\n});\n\n","// jshint browser:true, jquery: true\n\nclass PoliciesGUI {\n\n  PoliciesGUI(policyEng) {\n    this.policyEngine = policyEng;\n  }\n\n  showPoliciesGUI() {\n    console.log('POLICY ENGINE @ show', this.policyEngine);\n    $('.app').addClass('hide');\n    $('.identities-gui').addClass('hide');\n    $('.policies-gui').removeClass('hide');\n\n    $('.back').on('click', goHome);\n    $('.new-user').on('click', showNewUserPanel);\n    $('.add-user').on('click', addUser);\n    $('.new-group').on('.click', showNewGroupPanel);\n    $('.cancel-new-group').on('click', closeGroup);\n    $('.add-group').on('click', addGroup);\n    $('.close-new-group').on('click', closeGroupCreation);\n\n    requestGroupsNames();\n    addGroupsListener();\n    addGroupMembersListener();\n\n    $('.time-new').on('click', showNewTimeRestrictionPanel);\n    $('.time-allow').on('click', addTimeRestriction(true));\n    $('.time-block').on('click', addTimeRestriction(false));\n    $('.time-change-allow').on('click', changeTimeRestriction(true));\n    $('.time-change-block').on('click', changeTimeRestriction(false));\n    $('.time-cancel').on('click', cancelTimeDetails);\n    $('.time-cancel-new').on('click', cancelNewTimeRestriction);\n    requestTimeRestrictions();\n    addTimeListListener();\n  }\n\n  goHome() {\n    $('.app').removeClass('hide');\n    $('.policies-gui').addClass('hide');\n  }\n\n  addGroupsListener() {\n    document.getElementById('groupsList').addEventListener('click', function (e) {\n      let groupName = document.getElementById(e.target.id).id;\n      requestGroup(groupName);\n      document.getElementById('groupName').innerHTML = groupName;\n    });\n  }\n\n  requestGroupsNames() {\n    let message = {\n      type:'execute',\n      to: 'domain://localhost/policy-engine',\n      from: 'domain://localhost/policies-gui',\n      body: {\n        method: 'getGroupsNames'\n      }\n    };\n    /*messageBus.postMessage(message, function (response) {\n    showGroupsNames(response.body.value);\n  });*/\n}\n\nshowGroupsNames(groupsNames) {\n  let myList = document.getElementById('groupsList');\n  let numGroups = groupsNames.length;\n  if (numGroups === 0) {\n    myList.innerHTML = '<p>There are no groups to display.</p>';\n  } else {\n    myList.innerHTML = '';\n    for (let i = 0; i < numGroups; i++) {\n      let a = document.createElement('a');\n      a.className = 'collection-item';\n      a.id = groupsNames[i];\n      a.appendChild(document.createTextNode(groupsNames[i]));\n      myList.appendChild(a);\n    }\n  }\n}\n\nrequestGroup(groupName) {\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'getGroup',\n      params: {\n        groupName: groupName\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\nshowGroupMembers(groupMembers) {\n  $('.newGroup').addClass('hide');\n  $('.myGroups').addClass('hide');\n  let blockButton = document.getElementById('block');\n  blockButton.onclick = function() {\n    let groupName = document.getElementById('groupName').innerText;\n    $('.members').addClass('hide');\n    requestAddPolicy('group', groupName, false);\n    $('.newGroup').removeClass('hide');\n    $('.myGroups').removeClass('hide');\n  };\n  let allowButton = document.getElementById('allow');\n  allowButton.onclick = function() {\n    let groupName = document.getElementById('groupName').innerText;\n    $('.members').addClass('hide');\n    requestAddPolicy('group', groupName, true);\n    $('.newGroup').removeClass('hide');\n    $('.myGroups').removeClass('hide');\n  };\n  let deleteButton = document.getElementById('delete');\n  deleteButton.onclick = function() {\n    let groupName = document.getElementById('groupName').innerText;\n    $('.members').addClass('hide');\n    requestRemoveGroup(groupName);\n    requestGroupsNames();\n    $('.newGroup').removeClass('hide');\n    $('.myGroups').removeClass('hide');\n  };\n\n  let members = $('.members');\n  members.removeClass('hide');\n  let myList = document.getElementById('groupMembers');\n  myList.innerHTML = '<ul id=\\'groupMembers\\'></ul>';\n\n  let numMembers = groupMembers.length;\n  if (numMembers === 0) {\n    myList.innerHTML = '<p>This groups has no members.</p>';\n  } else {\n    let list = document.createElement('ul');\n    for (let i = 0; i < numMembers; i++) {\n      let item = document.createElement('li');\n      item.appendChild(document.createTextNode(groupMembers[i]));\n      item.id = groupMembers[i];\n      let removeBtn = document.createElement('button');\n      removeBtn.className = 'waves-effect waves-light btn';\n      removeBtn.id = 'member:' + groupMembers[i];\n      removeBtn.innerHTML = 'Remove';\n      removeBtn.type = 'button';\n      item.appendChild(removeBtn);\n      list.appendChild(item);\n    }\n    myList.appendChild(list);\n  }\n}\n\nrequestRemoveGroup(groupName) {\n  let message = {\n    type:'execute', to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'removeGroup',\n      params: {\n        groupName: groupName\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\nshowNewGroupPanel() {\n  $('.newGroupPanel').removeClass('hide');\n  $('.members').addClass('hide');\n  $('#newGroupName').val('');\n}\n\naddGroup() {\n  $('.newGroupPanel').addClass('hide');\n  let newGroupName = $('#newGroupName').val();\n  requestCreateGroup(newGroupName);\n  requestGroupsNames();\n}\n\ncloseGroupCreation() {\n  $('.newGroupPanel').addClass('hide');\n}\n\ncloseGroup() {\n  $('.members').addClass('hide');\n  $('.myGroups').removeClass('hide');\n  $('.newGroup').removeClass('hide');\n}\n\nrequestCreateGroup(groupName) {\n  let message = {\n    type:'execute', to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'createGroup',\n      params: {\n        groupName: groupName\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\nshowNewUserPanel() {\n  $('.newUser').removeClass('hide');\n  $('#newUserEmail').val('');\n}\n\naddUser() {\n  let newUserEmail = $('#newUserEmail').val();\n  let groupName = document.getElementById('groupName').innerText;\n  requestAddUser(newUserEmail, groupName);\n  requestGroup(groupName);\n  $('.newUser').addClass('hide');\n}\n\ncancelUser() {\n  $('.members').addClass('hide');\n  $('.newGroup').removeClass('hide');\n}\n\nrequestAddUser(userEmail, groupName) {\n  let message = {\n    type:'execute', to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'addToGroup',\n      params: {\n        userEmail: userEmail,\n        groupName: groupName\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\nrequestAddPolicy(type, params, authorise) {\n  let policy = {};\n  if (typeof params === 'string') {\n    policy = {\n      id: [type, params].join('-'), //group-groupname\n      scope: 'user',\n      condition: [type, params].join(' '), //group groupname\n      authorise: authorise,\n      actions: []\n    };\n  } else {\n    policy = {\n      id: [type, params.join('-')].join('-'), //time-1:00-2:00\n      scope: 'user',\n      condition: [type, params.join(' ')].join(' '), //time 1:00 2:00\n      authorise: authorise,\n      actions: []\n    };\n  }\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'addPolicies',\n      params: {\n        policies: [policy],\n        scope: 'user'\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\naddGroupMembersListener() {\n  document.getElementById('groupMembers').addEventListener('click', function(e) {\n    let userEmail = document.getElementById(e.target.id).id.slice(7);\n    let groupName = document.getElementById('groupName').innerText;\n    removeUserFromGroup(userEmail, groupName);\n    requestGroup(groupName);\n  });\n}\n\nremoveUserFromGroup(userEmail, groupName) {\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'removeFromGroup',\n      params: {\n        userEmail: userEmail,\n        groupName: groupName\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\n/*******************************************************/\nrequestTimeRestrictions() {\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'getTimeRestrictions'\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\naddTimeListListener() {\n  document.getElementById('timeRestrictionsList').addEventListener('click', function(e) {\n    let timeslot = e.target.id; //time-1-2\n    let time = timeslot.split('-');\n    document.getElementById('timeslot').innerHTML = 'Time slot: from ' + time[1] + ' to ' + time[2];\n    requestTimeRestriction(timeslot);\n\n    //requestRemoveTimeRestriction(e.target.id);\n    //requestTimeRestrictions();\n  });\n}\n\nrequestTimeRestriction(id) {\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'getTimeRestrictionById',\n      params: {\n        policyID: id,\n        scope: 'user'\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\nshowTimeRestrictionsList(timeRestrictions) {\n  $('.showTimeRestrictions').removeClass('hide');\n  let myList = document.getElementById('timeRestrictionsList');\n\n  let numRestrictions = timeRestrictions.length;\n  if (numRestrictions === 0) {\n    myList.innerHTML = '<p>There are no time restrictions set.<p>';\n  } else {\n    myList.innerHTML = '';\n    for (let i = 0; i < numRestrictions; i++) {\n      let array = timeRestrictions[i].split(' ');\n      array.shift();\n      let a = document.createElement('a');\n      a.className = 'collection-item';\n      a.id = 'time-' + array.join('-');\n      a.appendChild(document.createTextNode(array.join(' - ')));\n      myList.appendChild(a);\n    }\n  }\n}\n\nshowTimeRestriction(timeRestriction) {\n  $('.showTimeRestrictions').addClass('hide');\n  $('.newRestriction').addClass('hide');\n  $('.newRestrictionPanel').addClass('hide');\n  $('.timeRestriction').removeClass('hide');\n\n  let are = timeRestriction.authorise ? ' are ' : ' are not ';\n  document.getElementById('timeDetails').innerHTML = '<p>You' + are + 'available in this timeslot.</p>';\n}\n\nrequestRemoveTimeRestriction(timeRestrictionID) {\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'removePolicies',\n      params: {\n        policyID: timeRestrictionID,\n        scope: 'user'\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\nshowNewTimeRestrictionPanel() {\n  $('.newRestrictionPanel').removeClass('hide');\n  $('#startTime').val('');\n  $('#endTime').val('');\n}\n\naddTimeRestriction(authorise) {\n  $('.newRestrictionPanel').addClass('hide');\n  let start = $('#startTime').val();\n  let end = $('#endTime').val();\n  requestAddPolicy('time', [start, end], authorise);\n  requestTimeRestrictions();\n}\n\ncancelNewTimeRestriction() {\n  $('.showTimeRestrictions').removeClass('hide');\n  $('.newRestrictionPanel').addClass('hide');\n}\n\nchangeTimeRestriction(authorise) {\n  let timeslot = document.getElementById('timeslot').innerText;\n  let time = timeslot.split(' ');\n  let policyID = 'time-' + time[3] + '-' + time[5];\n  requestChangeTimePolicy(policyID, authorise);\n  cancelTimeDetails();\n}\n\nrequestChangeTimePolicy(policyID, authorise) {\n  let message = {\n    type:'execute',\n    to: 'domain://localhost/policy-engine',\n    from: 'domain://localhost/policies-gui',\n    body: {\n      method: 'changeTimePolicy',\n      params: {\n        policyID: policyID,\n        authorise: authorise,\n        scope: 'user'\n      }\n    }\n  };\n  //messageBus.postMessage(message);\n}\n\ncancelTimeDetails() {\n  $('.timeRestriction').addClass('hide');\n  $('.showTimeRestrictions').removeClass('hide');\n  $('striction').removeClass('hide');\n}\n}\n"],"sourceRoot":"/source/"}