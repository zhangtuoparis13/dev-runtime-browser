{"version":3,"sources":["node_modules/browser-pack/_prelude.js","identities-gui.js","src/admin/IdentitiesGUI.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","identitiesGui","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","IdentitiesGUI","identityModule","_this","console","log","$","on","showIdentitiesGUI","addClass","removeClass","showMyIdentities","showCurrentID","event","obtainNewIdentity","goHome","identity","email","domain","html","identities","myIdentities","document","getElementById","innerHTML","table","createTable","tbody","createElement","numIdentities","tr","createTableRow","appendChild","changeID","removeID","className","thead","thEmail","textContent","thDomain","td","style","btn","innerText","parentNode","children","Materialize","toast","row","idToRemove","splice","idProvider","id","url"],"mappings":"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","file":"identities-gui.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.identitiesGui = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// jshint browser:true, jquery: true\n\nvar IdentitiesGUI = function () {\n  function IdentitiesGUI(identityModule) {\n    _classCallCheck(this, IdentitiesGUI);\n\n    if (!identityModule) throw Error('Identity Module not set!');\n    var _this = this;\n\n    _this.identityModule = identityModule;\n    console.log(_this.identityModule);\n    $('.identities-btn').on('click', function () {\n      _this.showIdentitiesGUI();\n    });\n  }\n\n  _createClass(IdentitiesGUI, [{\n    key: 'showIdentitiesGUI',\n    value: function showIdentitiesGUI() {\n      var _this = this;\n\n      $('.policies-gui').addClass('hide');\n      $('.identities-gui').removeClass('hide');\n\n      _this.showMyIdentities();\n      _this.showCurrentID();\n      $('.idp').on('click', function (event) {\n        return _this.obtainNewIdentity();\n      });\n      $('.back').on('click', function (event) {\n        return _this.goHome();\n      });\n    }\n  }, {\n    key: 'goHome',\n    value: function goHome() {\n      $('.policies-gui').addClass('hide');\n      $('.identities-gui').addClass('hide');\n    }\n  }, {\n    key: 'showCurrentID',\n    value: function showCurrentID() {\n      var _this = this;\n      //let identity = _this.identityModule.getCurrentIdentity();\n      var identity = { email: 'user10@gmail.com', domain: 'google.com' };\n      $('.current-id').html('<b>Current identity: </b>' + identity.email + ' from ' + identity.domain);\n    }\n  }, {\n    key: 'showMyIdentities',\n    value: function showMyIdentities() {\n      var _this = this;\n\n      // let identities = _this.identityModule.getIdentities();\n      var identities = [{ email: 'user10@gmail.com', domain: 'google.com' }, { email: 'camila@orange.fr', domain: 'orange.fr' }, { email: 'user20@gmail.com', domain: 'facebook.com' }];\n      var myIdentities = document.getElementById('my-ids');\n      myIdentities.innerHTML = '';\n\n      var table = _this.createTable();\n\n      var tbody = document.createElement('tbody');\n      var numIdentities = identities.length;\n      for (var i = 0; i < numIdentities; i++) {\n        var tr = _this.createTableRow(identities[i]);\n        tbody.appendChild(tr);\n      }\n\n      table.appendChild(tbody);\n      myIdentities.appendChild(table);\n      $('.clickable-cell').on('click', function (event) {\n        return _this.changeID();\n      });\n      $('.remove-id').on('click', function (event) {\n        return _this.removeID();\n      });\n    }\n  }, {\n    key: 'createTable',\n    value: function createTable() {\n      var table = document.createElement('table');\n      table.className = 'centered';\n      var thead = document.createElement('thead');\n      var tr = document.createElement('tr');\n      var thEmail = document.createElement('th');\n      thEmail.textContent = 'Email';\n      tr.appendChild(thEmail);\n      var thDomain = document.createElement('th');\n      thDomain.textContent = 'Domain';\n      tr.appendChild(thDomain);\n      thead.appendChild(tr);\n      table.appendChild(thead);\n      return table;\n    }\n  }, {\n    key: 'createTableRow',\n    value: function createTableRow(identity) {\n      var tr = document.createElement('tr');\n\n      var td = document.createElement('td');\n      td.textContent = identity.email;\n      td.className = 'clickable-cell';\n      td.style = 'cursor: pointer';\n      tr.appendChild(td);\n      td = document.createElement('td');\n      td.textContent = identity.domain;\n      td.className = 'clickable-cell';\n      td.style = 'cursor: pointer';\n      tr.appendChild(td);\n      td = document.createElement('td');\n      var btn = document.createElement('button');\n      btn.textContent = 'Remove';\n      btn.className = 'remove-id waves-effect waves-light btn';\n      td.appendChild(btn);\n      tr.appendChild(td);\n\n      return tr;\n    }\n  }, {\n    key: 'changeID',\n    value: function changeID() {\n      var _this = this;\n      console.log(event);\n      var idToUse = event.target.innerText;\n      var domain = event.target.parentNode.children[1].innerText;\n      console.log(domain);\n      // _this.identityModule.setIdentity({email: idToUse, domain: domain});\n      Materialize.toast('Identity succesfuly changed!', 2000);\n      _this.showCurrentID();\n    }\n  }, {\n    key: 'removeID',\n    value: function removeID() {\n      var _this = this;\n      console.log(event);\n      var row = event.target.parentNode.parentNode;\n      var idToRemove = row.children[0].textContent;\n      var domain = row.children[1].textContent;\n      //_this.identityModule.deleteIdentity({ email: idToRemove, domain: domain });\n\n      // ------------------------------- TEMPORARY -------------------------------//\n      var numIdentities = identities.length;\n      for (var i = 0; i < numIdentities; i++) {\n        if (identities[i].email === idToRemove) {\n          identities.splice(i, 1);\n          break;\n        }\n      }\n      // -------------------------------------------------------------------------//\n      _this.showMyIdentities();\n\n      Materialize.toast('Identity succesfuly deleted!', 2000);\n    }\n  }, {\n    key: 'obtainNewIdentity',\n    value: function obtainNewIdentity() {\n      var _this = this;\n      var idProvider = event.target.id;\n      console.log(idProvider);\n      //_this.identityModule.obtainNewIdentity(idProvider);\n    }\n  }, {\n    key: 'showPopUp',\n    value: function showPopUp(url) {\n      // TODO\n    }\n  }]);\n\n  return IdentitiesGUI;\n}();\n\nexports.default = IdentitiesGUI;\n\n},{}]},{},[1])(1)\n});\n\n","// jshint browser:true, jquery: true\n\nclass IdentitiesGUI {\n\n  constructor(identityModule) {\n    if (!identityModule) throw Error('Identity Module not set!');\n    let _this = this;\n\n    _this.identityModule = identityModule;\n    console.log(_this.identityModule);\n    $('.identities-btn').on('click', function () {\n      _this.showIdentitiesGUI();\n    });\n  }\n\n  showIdentitiesGUI() {\n    let _this = this;\n\n    $('.policies-gui').addClass('hide');\n    $('.identities-gui').removeClass('hide');\n\n    _this.showMyIdentities();\n    _this.showCurrentID();\n    $('.idp').on('click', (event) => _this.obtainNewIdentity());\n    $('.back').on('click', (event) => _this.goHome());\n  }\n\n  goHome() {\n    $('.policies-gui').addClass('hide');\n    $('.identities-gui').addClass('hide');\n  }\n\n  showCurrentID() {\n    let _this = this;\n    //let identity = _this.identityModule.getCurrentIdentity();\n    let identity = { email: 'user10@gmail.com', domain: 'google.com' };\n    $('.current-id').html('<b>Current identity: </b>' + identity.email + ' from ' + identity.domain);\n  }\n\n  showMyIdentities() {\n    let _this = this;\n\n    // let identities = _this.identityModule.getIdentities();\n    let identities = [\n      { email: 'user10@gmail.com', domain: 'google.com' },\n      { email: 'camila@orange.fr', domain: 'orange.fr' },\n      { email: 'user20@gmail.com', domain: 'facebook.com' }\n    ];\n    let myIdentities = document.getElementById('my-ids');\n    myIdentities.innerHTML = '';\n\n    let table = _this.createTable();\n\n    let tbody = document.createElement('tbody');\n    let numIdentities = identities.length;\n    for (let i = 0; i < numIdentities; i++) {\n      let tr = _this.createTableRow(identities[i]);\n      tbody.appendChild(tr);\n    }\n\n    table.appendChild(tbody);\n    myIdentities.appendChild(table);\n    $('.clickable-cell').on('click', (event) => _this.changeID());\n    $('.remove-id').on('click', (event) => _this.removeID());\n  }\n\n  createTable() {\n    let table = document.createElement('table');\n    table.className = 'centered';\n    let thead = document.createElement('thead');\n    let tr = document.createElement('tr');\n    let thEmail = document.createElement('th');\n    thEmail.textContent = 'Email';\n    tr.appendChild(thEmail);\n    let thDomain = document.createElement('th');\n    thDomain.textContent = 'Domain';\n    tr.appendChild(thDomain);\n    thead.appendChild(tr);\n    table.appendChild(thead);\n    return table;\n  }\n\n  createTableRow(identity) {\n    let tr = document.createElement('tr');\n\n    let td = document.createElement('td');\n    td.textContent = identity.email;\n    td.className = 'clickable-cell';\n    td.style = 'cursor: pointer';\n    tr.appendChild(td);\n    td = document.createElement('td');\n    td.textContent = identity.domain;\n    td.className = 'clickable-cell';\n    td.style = 'cursor: pointer';\n    tr.appendChild(td);\n    td = document.createElement('td');\n    let btn = document.createElement('button');\n    btn.textContent = 'Remove';\n    btn.className = 'remove-id waves-effect waves-light btn';\n    td.appendChild(btn);\n    tr.appendChild(td);\n\n    return tr;\n  }\n\n  changeID() {\n    let _this = this;\n    console.log(event);\n    let idToUse = event.target.innerText;\n    let domain = event.target.parentNode.children[1].innerText;\n    console.log(domain);\n    // _this.identityModule.setIdentity({email: idToUse, domain: domain});\n    Materialize.toast('Identity succesfuly changed!', 2000);\n    _this.showCurrentID();\n  }\n\n  removeID() {\n    let _this = this;\n    console.log(event);\n    let row = event.target.parentNode.parentNode;\n    let idToRemove = row.children[0].textContent;\n    let domain = row.children[1].textContent;\n    //_this.identityModule.deleteIdentity({ email: idToRemove, domain: domain });\n\n    // ------------------------------- TEMPORARY -------------------------------//\n    let numIdentities = identities.length;\n    for (let i = 0; i < numIdentities; i++) {\n      if (identities[i].email === idToRemove) {\n        identities.splice(i, 1);\n        break;\n      }\n    }\n    // -------------------------------------------------------------------------//\n    _this.showMyIdentities();\n\n    Materialize.toast('Identity succesfuly deleted!', 2000);\n  }\n\n  obtainNewIdentity() {\n    let _this = this;\n    let idProvider = event.target.id;\n    console.log(idProvider);\n    //_this.identityModule.obtainNewIdentity(idProvider);\n  }\n\n  showPopUp(url) {\n    // TODO\n  }\n\n}\n\nexport default IdentitiesGUI;\n"],"sourceRoot":"/source/"}